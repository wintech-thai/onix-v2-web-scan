@model OnixWebScan.Models.VerifyViewModel
@using System.Text;
@using System.Net;
@{
    ViewData["Title"] = "Verify";

    var p = Model?.Payload;
    var s = p?.ScanItem;

    var isOk   = string.Equals(p?.Status, "OK", StringComparison.OrdinalIgnoreCase);
    var isWarn = string.Equals(p?.Status, "ALREADY_REGISTERED", StringComparison.OrdinalIgnoreCase);
    var isErr  = !(isOk || isWarn);

    var shellClass  = isOk ? "ok" : (isWarn ? "warn" : "err");
    var titleText   = isOk  ? "ยืนยันแล้วว่าเป็นสินค้าแท้"
                  : isWarn ? "โค้ดนี้ถูกใช้ไปแล้ว"
                           : "ไม่สามารถยืนยันความแท้ได้";
    var subTextTH   = isOk  ? "ขอบคุณที่ตรวจสอบ — คุณกำลังใช้สินค้าของแท้"
                  : isWarn ? "อาจเคยลงทะเบียนโดยผู้ใช้อื่นหรือร้านค้า หากเพิ่งซื้อ ให้ทีมเราช่วยตรวจเพิ่มได้"
                           : "โค้ดไม่ถูกต้อง หรืออาจถูกคัดลอก หากไม่มั่นใจให้เราช่วยตรวจได้";
    var subTextEN   = p?.DescriptionEng ?? "";

    // ===== ปุ่มผ่าน Controller =====
    string? encodedProductUrl = null;
    if (!string.IsNullOrWhiteSpace(s?.Url))
    {
        var b64 = Convert.ToBase64String(Encoding.UTF8.GetBytes(s!.Url));
        encodedProductUrl = WebUtility.UrlEncode(b64);
    }
    var primaryHref = isOk
        ? (encodedProductUrl is null ? "#" : Url.Action("OpenExternal", "Verify", new { u = encodedProductUrl }))
        : Url.Action("ContactSupport", "Verify", new { serial = s?.Serial, pin = s?.Pin, brand = s?.OrgId });
    var primaryText = isOk ? "เปิดข้อมูลสินค้า" : (isWarn ? "ติดต่อทีมดูแล" : "แจ้งให้เราช่วยตรวจ");
    var hasSecondary = isWarn && !string.IsNullOrWhiteSpace(encodedProductUrl);

    string NormalizeTF(string? v, string trueText, string falseText)
        => string.IsNullOrWhiteSpace(v) ? "-" :
           (string.Equals(v, "TRUE", StringComparison.OrdinalIgnoreCase) ? trueText :
            string.Equals(v, "FALSE", StringComparison.OrdinalIgnoreCase) ? falseText : v);

    var regText  = NormalizeTF(s?.RegisteredFlag, "ลงทะเบียนแล้ว", "ยังไม่ลงทะเบียน");
    var usedText = NormalizeTF(s?.UsedFlag,       "มีการใช้งาน",   "ยังไม่มีการใช้งาน");
}

<!-- ===== Inline SVG Icons ===== -->
<svg aria-hidden="true" style="position:absolute;width:0;height:0;overflow:hidden">
  <symbol id="i-check-circle" viewBox="0 0 24 24">
    <circle cx="12" cy="12" r="9" fill="none" stroke="currentColor" stroke-width="2"/>
    <path d="M8 12l3 3 5-5" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </symbol>
  <symbol id="i-x-circle" viewBox="0 0 24 24">
    <circle cx="12" cy="12" r="9" fill="none" stroke="currentColor" stroke-width="2"/>
    <path d="M9 9l6 6M15 9l-6 6" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
  </symbol>
  <symbol id="i-warning" viewBox="0 0 24 24">
    <path d="M12 3l10 18H2L12 3z" fill="none" stroke="currentColor" stroke-width="2" stroke-linejoin="round"/>
    <path d="M12 9v5" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
    <circle cx="12" cy="17" r="1.2" fill="currentColor"/>
  </symbol>
  <symbol id="i-hash" viewBox="0 0 24 24">
    <path d="M5 9h14M5 15h14M10 3L8 21M16 3l-2 18" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
  </symbol>
  <symbol id="i-key" viewBox="0 0 24 24">
    <circle cx="7" cy="12" r="3" fill="none" stroke="currentColor" stroke-width="2"/>
    <path d="M10 12h10M17 9v6" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
  </symbol>
  <symbol id="i-building" viewBox="0 0 24 24">
    <rect x="5" y="3" width="14" height="18" rx="2" fill="none" stroke="currentColor" stroke-width="2"/>
    <path d="M9 7h2M13 7h2M9 11h2M13 11h2M9 15h2M13 15h2M12 21v-4" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
  </symbol>
  <symbol id="i-tag" viewBox="0 0 24 24">
    <path d="M20 12l-8 8-8-8V6a2 2 0 0 1 2-2h6l8 8z" fill="none" stroke="currentColor" stroke-width="2"/>
    <circle cx="9" cy="9" r="1.5" fill="currentColor"/>
  </symbol>
  <symbol id="i-seq" viewBox="0 0 24 24">
    <rect x="3" y="5" width="18" height="14" rx="2" fill="none" stroke="currentColor" stroke-width="2"/>
    <path d="M7 9h10M7 13h6" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
  </symbol>
  <symbol id="i-beaker" viewBox="0 0 24 24">
    <path d="M10 3v5L5 19a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2L14 8V3" fill="none" stroke="currentColor" stroke-width="2"/>
  </symbol>
  <symbol id="i-globe" viewBox="0 0 24 24">
    <circle cx="12" cy="12" r="9" fill="none" stroke="currentColor" stroke-width="2"/>
    <path d="M3 12h18M12 3a15 15 0 0 1 0 18M12 3a15 15 0 0 0 0 18" fill="none" stroke="currentColor" stroke-width="2"/>
  </symbol>
  <symbol id="i-box" viewBox="0 0 24 24">
    <path d="M3 8l9-4 9 4v10l-9 4-9-4V8z" fill="none" stroke="currentColor" stroke-width="2" stroke-linejoin="round"/>
    <path d="M12 4v16M3 8l9 4 9-4" fill="none" stroke="currentColor" stroke-width="2"/>
  </symbol>
  <symbol id="i-link" viewBox="0 0 24 24">
    <path d="M10 14l-2 2a4 4 0 1 1-6-6l2-2M14 10l2-2a4 4 0 1 1 6 6l-2 2" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
    <path d="M8 12h8" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
  </symbol>
  <symbol id="i-clock" viewBox="0 0 24 24">
    <circle cx="12" cy="12" r="9" fill="none" stroke="currentColor" stroke-width="2"/>
    <path d="M12 7v5l3 2" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
  </symbol>
  <symbol id="i-id" viewBox="0 0 24 24">
    <rect x="3" y="6" width="18" height="12" rx="2" fill="none" stroke="currentColor" stroke-width="2"/>
    <path d="M7 10h5M7 14h8" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
  </symbol>
</svg>

<!-- ===== Styles ===== -->
<style>
  body{font-family:system-ui,-apple-system,"Segoe UI",Roboto,Ubuntu,"Helvetica Neue","Noto Sans Thai",sans-serif;background:#f5f7fb}
  .page{max-width:900px;margin:28px auto;padding:0 18px}
  .hero{border:1px solid #e6e8ef;border-radius:18px;box-shadow:0 4px 16px rgba(0,0,0,.05);padding:22px 20px;background:#ffffff}
  .hero .head{display:flex;align-items:center;justify-content:space-between;gap:12px}
  .hero h1{margin:0 0 6px 0;font-size:26px;color:#0f172a}
  .badge{display:inline-flex;align-items:center;gap:8px;padding:8px 12px;border-radius:999px;border:1px solid}
  .badge svg{width:18px;height:18px}
  .ok  {background:#eefcf3;border-color:#b7ebc7;color:#0c5e35}
  .warn{background:#fff6e6;border-color:#ffdcae;color:#8a4b0f}
  .err {background:#ffecec;border-color:#ffc7c7;color:#a52323}
  .lead{color:#334155;margin-top:6px}
  .muted{color:#64748b}
  .cta{display:flex;gap:10px;flex-wrap:wrap;margin-top:14px}
  .btn{display:inline-flex;align-items:center;gap:8px;border:1px solid #111827;background:#111827;color:#fff;text-decoration:none;padding:10px 14px;border-radius:12px}
  .btn svg{width:16px;height:16px}
  .btn.light{border-color:#e6e8ef;background:#f8fafc;color:#0f172a}
  .section{background:#fff;border:1px solid #e6e8ef;border-radius:16px;box-shadow:0 2px 12px rgba(0,0,0,.04);padding:16px 18px;margin-top:16px}
  .section h2{margin:0 0 10px 0;font-size:20px;color:#0f172a}
  .row{display:flex;align-items:center;justify-content:space-between;gap:12px;border:1px dashed #e6e8ef;border-radius:12px;padding:10px 12px;margin-top:10px}
  .label{display:flex;align-items:center;gap:8px;color:#334155;font-weight:600}
  .label svg{width:16px;height:16px}
  .value{font-family:ui-monospace,SFMono-Regular,Menlo,Consolas,monospace;color:#0f172a}
  .ellipsis{max-width:68%;text-align:right;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}
</style>

<div class="page">
  <!-- HERO -->
  <div class="hero">
    <div class="head">
      <h1>@titleText</h1>
      <div class="badge @(shellClass)">
        <svg><use href="#@(isOk ? "i-check-circle" : (isWarn ? "i-warning" : "i-x-circle"))"/></svg>
        @Model.StatusText
      </div>
    </div>

    <div class="lead">
      <div>@subTextTH</div>
      @if (!string.IsNullOrWhiteSpace(subTextEN)) { <div class="muted">@subTextEN</div> }
    </div>

    <div class="cta">
      <a class="btn" href="@primaryHref">
        <svg><use href="#i-link"/></svg> @primaryText
      </a>
      @if (hasSecondary) {
        <a class="btn light" href="@Url.Action("OpenExternal","Verify", new { u = encodedProductUrl })">
          <svg><use href="#i-link"/></svg> เปิดข้อมูลสินค้า
        </a>
      }
    </div>
  </div>

  <!-- ข้อมูลสินค้า -->
  <div class="section">
    <h2>ข้อมูลสินค้า</h2>
    <div class="row"><div class="label"><svg><use href="#i-hash"/></svg>Serial</div><div class="value">@((s?.Serial) ?? "-")</div></div>
    <div class="row"><div class="label"><svg><use href="#i-key"/></svg>PIN</div><div class="value">@((s?.Pin) ?? "-")</div></div>
    <div class="row"><div class="label"><svg><use href="#i-building"/></svg>แบรนด์</div><div class="value">@((s?.OrgId) ?? "-")</div></div>
    <div class="row"><div class="label"><svg><use href="#i-tag"/></svg>กลุ่มสินค้า</div><div class="value">@((s?.ItemGroup) ?? "-")</div></div>
    <div class="row"><div class="label"><svg><use href="#i-box"/></svg>สถานะลงทะเบียน</div><div class="value">@regText</div></div>
    <div class="row"><div class="label"><svg><use href="#i-box"/></svg>สถานะการใช้งาน</div><div class="value">@usedText</div></div>
  </div>

  <!-- รายละเอียดการตรวจสอบ -->
  <div class="section">
    <h2>รายละเอียดการตรวจสอบ</h2>
    <div class="row"><div class="label"><svg><use href="#i-seq"/></svg>Sequence</div><div class="value">@((s?.SequenceNo) ?? "-")</div></div>
    <div class="row"><div class="label"><svg><use href="#i-beaker"/></svg>Run Id</div><div class="value">@((s?.RunId) ?? "-")</div></div>
    <div class="row">
      <div class="label"><svg><use href="#i-globe"/></svg>ลิงก์สินค้า</div>
      <div class="value ellipsis">
        @if (!string.IsNullOrWhiteSpace(encodedProductUrl)) {
          <a href="@Url.Action("OpenExternal","Verify", new { u = encodedProductUrl })">
            @((s?.Url) ?? "-")
          </a>
        } else { @("-") }
      </div>
    </div>
    <div class="row">
      <div class="label"><svg><use href="#i-box"/></svg>พาธไฟล์อัปโหลด</div>
      <div class="value ellipsis">@((s?.UploadedPath) ?? "-")</div>
    </div>
  </div>

  <!-- เวลา / อายุข้อมูล -->
  <div class="section">
    <h2>เวลา</h2>
    <div class="row"><div class="label"><svg><use href="#i-clock"/></svg>สร้างข้อมูล</div><div class="value">@OnixWebScan.Models.VerifyViewModel.Fmt(p?.DataGeneratedDate)</div></div>
    <div class="row"><div class="label"><svg><use href="#i-clock"/></svg>ลงทะเบียน</div><div class="value">@OnixWebScan.Models.VerifyViewModel.Fmt(s?.RegisteredDate)</div></div>
    <div class="row"><div class="label"><svg><use href="#i-clock"/></svg>อายุข้อมูล</div><div class="value">@Model.TtlDisplay</div></div>
  </div>

  <!-- รหัสอ้างอิง -->
  <div class="section">
    <h2>รหัสอ้างอิง</h2>
    <div class="row"><div class="label"><svg><use href="#i-id"/></svg>Record Id</div><div class="value">@((s?.Id) ?? "-")</div></div>
  </div>

  <!-- ช่วยเหลือ -->
  <div class="section">
    <h2>ต้องการให้เราช่วยดูเพิ่ม?</h2>
    <div class="muted">ส่งรูปสินค้า/ใบเสร็จ หรือบอกรหัส Serial & PIN ให้ทีมเราได้</div>
    <div class="cta" style="margin-top:10px">
      <a class="btn light" href="@Url.Action("ContactSupport","Verify", new { serial = s?.Serial, pin = s?.Pin, brand = s?.OrgId })">
        อีเมลทีมดูแล
      </a>
      @if (!string.IsNullOrWhiteSpace(encodedProductUrl)) {
        <a class="btn light" href="@Url.Action("OpenExternal","Verify", new { u = encodedProductUrl })">
          ไปยังหน้าสินค้า
        </a>
      }
    </div>
  </div>
</div>
